#include <stdlib.h>
#include <string.h>
 
int main(){
  void print_sqlca();

  EXEC SQL BEGIN DECLARE SECTION; 
     int caCode[10];
     varchar caName[10][30];
  EXEC SQL END DECLARE SECTION;

  EXEC SQL CONNECT TO test@10.136.1.143:5432 USER lww/lww;

  if(sqlca.sqlcode) 
  {
    printf("Connect database ERROR! sqlcode=%s\n", sqlca.sqlcode);
  }
  else
    printf("Connect database OK!\n");

  //删除表内记录
  EXEC SQL DELETE FROM organ;
  //插入多条记录
  EXEC SQL INSERT INTO organ values (1, '机构1'); 
  EXEC SQL INSERT INTO organ values (2, '机构2'); 
  EXEC SQL INSERT INTO organ values (3, '机构3'); 
  EXEC SQL INSERT INTO organ values (4, '机构4'); 
  EXEC SQL INSERT INTO organ values (5, '机构5'); 
  
  if(sqlca.sqlcode)
  {
    print_sqlca();
  }

  EXEC SQL COMMIT; //ecpg编译时不加-t参数，此处需要显示提交,否则数据库内数据未更新！
  //定义游标读取表内所有记录
  EXEC SQL DECLARE organ_cursor CURSOR FOR
       SELECT organcode, organname FROM organ
       ORDER BY organcode;
  EXEC SQL OPEN organ_cursor;
 
  while(1)
  {
     memset(caName, 0x00, sizeof(caName));
     EXEC SQL FETCH 2 organ_cursor INTO :caCode, :caName;
     printf("%d\n", sqlca.sqlerrd[2]);
     if(sqlca.sqlcode==100)
          {
           //print_sqlca();
           break;
          }
     
     int i=0;
     for( i=0; i<sqlca.sqlerrd[2]; i++)
           printf("organcode = %d, organname = %*s\n", caCode[i], caName[i].len, caName[i].arr); //NOTE: varchar type
  }
  
  EXEC SQL CLOSE organ_cursor;
  EXEC SQL COMMIT;

  EXEC SQL DISCONNECT all;
  return 0;

}
void print_sqlca()
{
  fprintf(stderr, "==== sqlca ====\n");
  fprintf(stderr, "sqlcode: %ld\n", sqlca.sqlcode);
  fprintf(stderr, "sqlerrm.sqlerrml: %d\n", sqlca.sqlerrm.sqlerrml);
  fprintf(stderr, "sqlerrm.sqlerrmc: %s\n", sqlca.sqlerrm.sqlerrmc);
  fprintf(stderr, "sqlerrd: %ld %ld %ld %ld %ld %ld\n", sqlca.sqlerrd[0],sqlca.sqlerrd[1],sqlca.sqlerrd[2],
  sqlca.sqlerrd[3],sqlca.sqlerrd[4],sqlca.sqlerrd[5]);
  fprintf(stderr, "sqlwarn: %d %d %d %d %d %d %d %d\n", sqlca.sqlwarn[0], sqlca.sqlwarn[1], sqlca.sqlwarn[2],
  sqlca.sqlwarn[3], sqlca.sqlwarn[4], sqlca.sqlwarn[5],
  sqlca.sqlwarn[6], sqlca.sqlwarn[7]);
  fprintf(stderr, "sqlstate: %5s\n", sqlca.sqlstate);
  fprintf(stderr, "===============\n");
}
